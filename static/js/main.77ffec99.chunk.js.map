{"version":3,"sources":["stylesheets/TodoListItem.module.scss","stylesheets/TodoTemplate.module.scss","stylesheets/TodoList.module.scss","stylesheets/TodoInsert.module.scss","components/TodoListItem.js","components/TodoList.js","components/TodoTemplate.js","components/TodoInsert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","cn","classnames","bind","styles","TodoListItem","todo","handleClickRemove","handleClickToggle","style","id","text","checked","className","onClick","ButtonBase","component","React","memo","prevProps","nextProps","TodoList","todosList","rowRenderer","useCallback","index","key","width","height","rowCount","length","rowHeight","list","outline","TodoTemplate","children","TodoInsert","handleClickInsert","useState","setText","onChangeText","e","target","value","onClickAdd","type","placeholder","onChange","createBulkTodos","array","i","push","todoReducer","action","concat","newTodo","filter","map","App","useReducer","undefined","dispatch","idxRef","useRef","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77ffec99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"virtual\":\"TodoListItem_virtual__26OA5\",\"wrap\":\"TodoListItem_wrap__3yY4n\",\"checkbox\":\"TodoListItem_checkbox__ITdpH\",\"text\":\"TodoListItem_text__2u34B\",\"checked\":\"TodoListItem_checked__2h1lz\",\"remove\":\"TodoListItem_remove__3SZ1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"TodoTemplate_wrap__XQI-M\",\"title\":\"TodoTemplate_title__2yPCB\",\"content\":\"TodoTemplate_content__xGGXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"TodoList_wrap__3KzOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"TodoInsert_wrap__1idzF\"};","import React from 'react';\nimport { MdCheckBox, MdRemoveCircleOutline, MdCheckBoxOutlineBlank } from 'react-icons/md';\nimport classnames from 'classnames/bind';\nimport { ButtonBase } from '@material-ui/core';\n/* Library */\n\nimport styles from '../stylesheets/TodoListItem.module.scss';\n/* StyleSteets */\n\nconst cn = classnames.bind(styles);\n\nconst TodoListItem = ({ todo, handleClickRemove, handleClickToggle, style }) => {\n\n    const { id, text, checked } = todo;\n    return (\n        <div className={styles['virtual']} style={style}>\n            <main className={styles['wrap']}>\n                <section className={cn('checkbox', { checked })} onClick={() => handleClickToggle(id)}>\n                    <ButtonBase component=\"div\">\n                        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n                    </ButtonBase>\n                    <div className={styles['text']}>{text}</div>\n                </section>\n                <ButtonBase component=\"div\" className={styles['remove']} onClick={() => handleClickRemove(id)}>\n                    <MdRemoveCircleOutline />\n                </ButtonBase>\n            </main>\n        </div>\n    );\n};\n\nexport default React.memo(\n    TodoListItem,\n    (prevProps, nextProps) => prevProps.todo === nextProps.todo,\n);","import React, { useCallback } from 'react';\nimport { List } from 'react-virtualized';\n/* Library */\n\nimport styles from '../stylesheets/TodoList.module.scss';\n/* components */\n\nimport TodoListItem from './TodoListItem';\n/* styleSheets */\n\nconst TodoList = ({ todosList, handleClickRemove, handleClickToggle }) => {\n\n    const rowRenderer = useCallback(({ index, key, style }) => {\n        const todo = todosList[index];\n        return (\n            <TodoListItem\n                key={key}\n                todo={todo}\n                handleClickRemove={handleClickRemove}\n                handleClickToggle={handleClickToggle}\n                style={style}\n            />\n        );\n    }, [handleClickRemove, handleClickToggle, todosList]);\n\n    return (\n        <List\n            className={styles['wrap']}\n            width={512} // 전체\n            height={513} // 전체\n            rowCount={todosList.length} // 항목 갯수\n            rowHeight={57} // 항복 높이\n            rowRenderer={rowRenderer} // 항목 렌더링 함수\n            list={TodoList} // 배열\n            style={{ outline: 'none' }}\n        />\n    );\n};\n\nexport default React.memo(TodoList);","import React from 'react';\n/* Library */\n\nimport styles from '../stylesheets/TodoTemplate.module.scss';\n/* styleSheets */\n\nconst TodoTemplate = ({ children }) => {\n\n    return (\n        <main className={styles['wrap']}>\n            <div className={styles['title']}>일정 관리</div>\n            <div className={styles['content']}>{children}</div>\n        </main>\n    );\n};\n\nexport default TodoTemplate;","import React, { useCallback, useState } from 'react';\nimport { MdAdd } from 'react-icons/md'\nimport { ButtonBase } from '@material-ui/core';\n/* Library */\n\nimport styles from '../stylesheets/TodoInsert.module.scss';\n/* stylSheets */\n\nconst TodoInsert = ({ handleClickInsert }) => {\n\n    const [text, setText] = useState('');\n\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value);\n    }, []);\n\n    const onClickAdd = useCallback(() => {\n        handleClickInsert(text);\n        setText(''); //초기화\n    }, [handleClickInsert, text]);\n\n    return (\n        <form className={styles['wrap']}>\n            <input\n                type=\"text\"\n                placeholder=\"할 일을 입력하세요\"\n                value={text}\n                onChange={onChangeText}\n            />\n            <ButtonBase\n                component=\"button\"\n                onClick={onClickAdd}>\n                <MdAdd />\n            </ButtonBase>\n        </form>\n    );\n};\n\nexport default TodoInsert;","import React, { useCallback, useReducer, useRef } from 'react';\n/* Library */\n\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\n/* Components */\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 0; i < 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일${i}`,\n      checked: false,\n    });\n  };\n  return array;\n}\n\nfunction todoReducer(todosList, action) {\n  switch (action.type) {\n    case 'INSERT':\n      return todosList.concat(action.newTodo);\n    case 'REMOVE':\n      return todosList.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return todosList.map((todo) => todo.id === action.id ? { ...todo, checked: !todo.checked } : todo);\n    default:\n      return todosList;\n  }\n}\nconst App = () => {\n\n  // 다양한 상태(insert, remove, toggle)를 관리하기 위해 state가 아닌 reducer를 사용\n  const [todosList, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n  const idxRef = useRef(2500); // 새로 추가하기 위한 id\n\n  const handleClickInsert = useCallback((text) => {\n    const newTodo = {\n      id: idxRef.current,\n      text: text,\n      checked: false,\n    };\n    dispatch({ type: 'INSERT', newTodo });\n    idxRef.current += 1;\n  }, []);\n\n  const handleClickRemove = useCallback((id) => {\n    dispatch({ type: 'REMOVE', id });\n  }, []);\n\n  const handleClickToggle = useCallback((id) => {\n    dispatch({ type: 'TOGGLE', id })\n  }, []);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert handleClickInsert={handleClickInsert} />\n      <TodoList todosList={todosList} handleClickRemove={handleClickRemove} handleClickToggle={handleClickToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}